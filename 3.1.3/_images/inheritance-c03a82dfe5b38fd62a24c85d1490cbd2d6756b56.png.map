<map id="inheritance796647343e" name="inheritance796647343e">
<area shape="rect" id="node1" href="#matplotlib.ticker.AutoLocator" target="_top" title="Dynamically find major tick positions. This is actually a subclass" alt="" coords="454,4,538,26"/>
<area shape="rect" id="node2" href="#matplotlib.ticker.MaxNLocator" target="_top" title="Select no more than N intervals at nice locations." alt="" coords="264,4,355,26"/>
<area shape="rect" id="node3" href="#matplotlib.ticker.AutoMinorLocator" target="_top" title="Dynamically find minor tick positions based on the positions of" alt="" coords="252,46,368,67"/>
<area shape="rect" id="node4" href="#matplotlib.ticker.Locator" target="_top" title="Determine the tick locations;" alt="" coords="129,234,189,255"/>
<area shape="rect" id="node9" href="#matplotlib.ticker.FixedLocator" target="_top" title="Tick locations are fixed. &#160;If nbins is not None," alt="" coords="266,88,354,109"/>
<area shape="rect" id="node14" href="#matplotlib.ticker.IndexLocator" target="_top" title="Place a tick on every multiple of some base number of points" alt="" coords="265,129,355,150"/>
<area shape="rect" id="node15" href="#matplotlib.ticker.LinearLocator" target="_top" title="Determine the tick locations" alt="" coords="263,171,356,192"/>
<area shape="rect" id="node20" href="#matplotlib.ticker.LogLocator" target="_top" title="Determine the tick locations for log axes" alt="" coords="271,212,349,234"/>
<area shape="rect" id="node22" href="#matplotlib.ticker.LogitLocator" target="_top" title="Determine the tick locations for logit axes" alt="" coords="267,254,353,275"/>
<area shape="rect" id="node23" href="#matplotlib.ticker.MultipleLocator" target="_top" title="Set a tick on each integer multiple of a base within the view interval." alt="" coords="258,295,362,317"/>
<area shape="rect" id="node25" href="#matplotlib.ticker.NullLocator" target="_top" title="No ticks" alt="" coords="269,337,350,358"/>
<area shape="rect" id="node26" href="#matplotlib.ticker.OldAutoLocator" target="_top" title="On autoscale this class picks the best MultipleLocator to set the" alt="" coords="258,378,362,400"/>
<area shape="rect" id="node31" href="#matplotlib.ticker.SymmetricalLogLocator" target="_top" title="Determine the tick locations for symmetric log axes" alt="" coords="236,420,384,441"/>
<area shape="rect" id="node5" title="[*Deprecated*] this solution has some hacks to deal with floating point inaccuracies" alt="" coords="13,420,74,441"/>
<area shape="rect" id="node6" href="#matplotlib.ticker.EngFormatter" target="_top" title="Formats axis values using engineering prefixes to represent powers" alt="" coords="263,461,356,483"/>
<area shape="rect" id="node7" href="#matplotlib.ticker.Formatter" target="_top" title="Create a string based on a tick value and location." alt="" coords="122,669,195,691"/>
<area shape="rect" id="node8" href="#matplotlib.ticker.FixedFormatter" target="_top" title="Return fixed strings for tick labels based only on position, not value." alt="" coords="259,503,360,524"/>
<area shape="rect" id="node10" href="#matplotlib.ticker.FormatStrFormatter" target="_top" title="Use an old&#45;style (&#39;%&#39; operator) format string to format the tick." alt="" coords="246,545,373,566"/>
<area shape="rect" id="node12" href="#matplotlib.ticker.FuncFormatter" target="_top" title="Use a user&#45;defined function for formatting." alt="" coords="261,586,359,607"/>
<area shape="rect" id="node13" href="#matplotlib.ticker.IndexFormatter" target="_top" title="Format the position x to the nearest i&#45;th label where ``i = int(x + 0.5)``." alt="" coords="258,628,362,649"/>
<area shape="rect" id="node16" href="#matplotlib.ticker.LogFormatter" target="_top" title="Base class for formatting ticks on a log or symlog scale." alt="" coords="264,669,356,691"/>
<area shape="rect" id="node21" href="#matplotlib.ticker.LogitFormatter" target="_top" title="Probability formatter (using Math text)." alt="" coords="260,711,360,732"/>
<area shape="rect" id="node24" href="#matplotlib.ticker.NullFormatter" target="_top" title="Always return the empty string." alt="" coords="263,752,357,774"/>
<area shape="rect" id="node27" href="#matplotlib.ticker.OldScalarFormatter" target="_top" title="Tick location is a plain old number." alt="" coords="248,794,372,815"/>
<area shape="rect" id="node28" href="#matplotlib.ticker.PercentFormatter" target="_top" title="Format numbers as a percentage." alt="" coords="253,835,367,857"/>
<area shape="rect" id="node29" href="#matplotlib.ticker.ScalarFormatter" target="_top" title="Format tick values as a number." alt="" coords="257,877,363,898"/>
<area shape="rect" id="node30" href="#matplotlib.ticker.StrMethodFormatter" target="_top" title="Use a new&#45;style format string (as used by `str.format()`)" alt="" coords="245,918,374,940"/>
<area shape="rect" id="node11" href="#matplotlib.ticker.TickHelper" target="_top" title="TickHelper" alt="" coords="4,461,82,483"/>
<area shape="rect" id="node17" href="#matplotlib.ticker.LogFormatterExponent" target="_top" title="Format values for log axis using ``exponent = log_base(value)``." alt="" coords="424,648,568,669"/>
<area shape="rect" id="node18" href="#matplotlib.ticker.LogFormatterMathtext" target="_top" title="Format values for log axis using ``exponent = log_base(value)``." alt="" coords="426,689,567,711"/>
<area shape="rect" id="node19" href="#matplotlib.ticker.LogFormatterSciNotation" target="_top" title="Format values following scientific notation in a logarithmic axis." alt="" coords="609,689,764,711"/>
</map>
